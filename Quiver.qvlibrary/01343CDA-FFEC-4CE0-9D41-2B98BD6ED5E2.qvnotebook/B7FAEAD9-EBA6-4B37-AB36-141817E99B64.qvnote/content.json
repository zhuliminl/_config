{
  "title": "预设为行进导向的编程方法",
  "cells": [
    {
      "type": "code",
      "language": "python",
      "data": "\n我所说的预设，是一种具体的编程行进的方法。是一种行为范式，告诉自己该做什么，以及不该做什么。\n\n具体说来，应该包括以下几项该做的事情：\n1. 意图式编程。在每个模块的文件顶部注释，问清楚自己即将要做什么，该怎么做以及注意事项，这三件事情\n2. 当意图明确的时候，先设计各个模块的接口，而不急于去实现，甚至对于一些可以确定结果的类和函数，可以选择不去实现，把更多的注意力放在自己觉得棘手的问题上\n3. 模块化的编程习惯必不可少。这样更容易在逐步调试的时候进行切割，独立出问题然后解决\n4. 要知道稳固的结构永远要高于精巧的实现。\n5. 预设的意思就是在模块结构确定的情况下，预设一切的接口，而不去实现。\n6. 预设的初期动作其实就是面向接口编程中的寻找边界类\n7. 提醒自己，预设的投入完完全全可以高于各种看似紧急的实现\n8. 编程就像是在做菜，炒之前一定得准备好思路和配料才行\n\n不该做什么：\n1. 无论一个棘手问题的实现方法多么值得关注和诱人，也必须在接口确定之后才能开始尝试实现\n2. 绝对不能在接口设计和考虑不良的情况下，冒然去写实现代码\n3. 不能把最旺盛的尽力去写最不重要的实现，最不重要的实现，总是可以在接口设计好和棘手实现完成后再处理\n4. 接口设计好之后也可能不是最好的，所以不能在发现接口不良之后，舍不得去重新修改它\n\n"
    }
  ]
}