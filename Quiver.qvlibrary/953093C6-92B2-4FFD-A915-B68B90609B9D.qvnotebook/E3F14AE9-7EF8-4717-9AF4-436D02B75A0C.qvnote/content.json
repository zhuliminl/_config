{
  "title": "理解响应式编程和 Promise 的区别不、以及和FP 的关系",
  "cells": [
    {
      "type": "text",
      "data": "<div><a href=\"https://stackoverflow.com/questions/34495117/how-is-reactive-programming-different-than-event-driven-programming\">https://stackoverflow.com/questions/34495117/how-is-reactive-programming-different-than-event-driven-programming</a><br></div><div><br></div><div>使用 Promise 本质上还是在优雅地处理回调。数据的流通其实还是一步步来的。</div><div><br></div><div>但是使用响应式编程，必须以事件流的方式去思考。我们不关系数据从哪里来的，我们只是处理的一种基站点。</div><div><br></div><div>函数式编程的风格会引导你以值流的方式去思考问题。这是一种会随着时间而变化的流体值。并且你会去关心这些值之间的关系</div><div><br></div><div><span style=\"color: rgb(36, 39, 41); font-family: Arial, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">The FRP coding style will guide you to model your problem as a stream of values (i.e. values that change over time) and the relationships between these values. If you already know Promises, the initial learning curve will be a bit easier, but the main benefit is gained only when you start thinking and modeling the problem differently - it is possible (if not very useful) to do imperative programming with FRP libraries.</span><br></div><div><span style=\"color: rgb(36, 39, 41); font-family: Arial, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><br></span></div><div><span style=\"color: rgb(36, 39, 41); font-family: Arial, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><br></span></div><div><span style=\"color: rgb(36, 39, 41); font-family: Arial, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><lighter data-id=\"lgt07895230585144275\" style=\"box-sizing: inherit; color: rgb(36, 39, 41); font-variant-ligatures: normal; background-color: rgb(127, 230, 218); position: relative !important;\">Reactive programming deals with&nbsp;</lighter><strong style=\"margin: 0px; padding: 0px; border: 0px; font-variant-ligatures: normal; font-variant-numeric: inherit; font-variant-east-asian: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; box-sizing: inherit; color: rgb(36, 39, 41); background-color: rgb(255, 255, 255);\"><lighter data-id=\"lgt07895230585144275\" style=\"user-select: text !important; box-sizing: inherit; position: relative !important; font-family: inherit !important; font-size: inherit !important; color: inherit !important; font-weight: inherit !important; background-color: rgb(127, 230, 218);\">data</lighter></strong><lighter data-id=\"lgt07895230585144275\" style=\"box-sizing: inherit; color: rgb(36, 39, 41); font-variant-ligatures: normal; background-color: rgb(127, 230, 218); position: relative !important;\">. Ultimately this is a special case of event-driven programming</lighter><br></span></div><div><span style=\"color: rgb(36, 39, 41); font-family: Arial, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><lighter data-id=\"lgt07895230585144275\" style=\"box-sizing: inherit; color: rgb(36, 39, 41); font-variant-ligatures: normal; background-color: rgb(127, 230, 218); position: relative !important;\"><br></lighter></span></div><div></div><div style=\"orphans: 2; widows: 2;\"><font face=\"Arial, Helvetica Neue, Helvetica, sans-serif\">响应式驱动专门处理数据本身。它本质上是一种特殊情形的事件驱动编程。</font></div><div style=\"orphans: 2; widows: 2;\"><font face=\"Arial, Helvetica Neue, Helvetica, sans-serif\"><br></font></div><div style=\"orphans: 2; widows: 2;\"><font face=\"Arial, Helvetica Neue, Helvetica, sans-serif\">一个事件说：数据改变啦！而另外一个事件处理者则再次改变更多的数据</font></div><div style=\"orphans: 2; widows: 2;\"><font face=\"Arial, Helvetica Neue, Helvetica, sans-serif\"><br></font></div><div style=\"orphans: 2; widows: 2;\"><font face=\"Arial, Helvetica Neue, Helvetica, sans-serif\">最后：响应式编程和其他的编程范式如 FP、OOP 是一种正交关系</font></div><div style=\"orphans: 2; widows: 2;\"><font face=\"Arial, Helvetica Neue, Helvetica, sans-serif\"><br></font></div><div style=\"orphans: 2; widows: 2;\"><font face=\"Arial, Helvetica Neue, Helvetica, sans-serif\"><br></font></div><div style=\"orphans: 2; widows: 2;\"><font face=\"Arial, Helvetica Neue, Helvetica, sans-serif\">Promise 本身：</font></div><div style=\"orphans: 2; widows: 2;\"><font face=\"Arial, Helvetica Neue, Helvetica, sans-serif\"><br></font></div><div style=\"orphans: 2; widows: 2;\"><p style=\"margin: 0px 0px 1em; padding: 0px; border: 0px; font-variant-ligatures: normal; font-variant-numeric: inherit; font-variant-east-asian: inherit; font-stretch: inherit; line-height: inherit; font-family: Arial, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; vertical-align: baseline; box-sizing: inherit; clear: both; color: rgb(36, 39, 41); background-color: rgb(255, 255, 255);\">Promises are an abstraction of the flow of program execution which can be summed up as follows:</p><ul style=\"margin: 0px 0px 1em 30px; padding: 0px; border: 0px; font-variant-ligatures: normal; font-variant-numeric: inherit; font-variant-east-asian: inherit; font-stretch: inherit; line-height: inherit; font-family: Arial, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; box-sizing: inherit; color: rgb(36, 39, 41); background-color: rgb(255, 255, 255);\"><li style=\"margin: 0px 0px 0.5em; padding: 0px; border: 0px; font-style: inherit; font-variant-ligatures: inherit; font-variant-position: inherit; font-variant-caps: inherit; font-variant-numeric: inherit; font-variant-alternates: inherit; font-variant-east-asian: inherit; font-stretch: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; box-sizing: inherit; overflow-wrap: break-word;\">Asker: Whenever you're done doing what you're doing, would you call me back?</li><li style=\"margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant-ligatures: inherit; font-variant-position: inherit; font-variant-caps: inherit; font-variant-numeric: inherit; font-variant-alternates: inherit; font-variant-east-asian: inherit; font-stretch: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; box-sizing: inherit; overflow-wrap: break-word;\">Answerer: Sure thing, I&nbsp;<strong style=\"margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant-ligatures: inherit; font-variant-position: inherit; font-variant-caps: inherit; font-variant-numeric: inherit; font-variant-alternates: inherit; font-variant-east-asian: inherit; font-stretch: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; box-sizing: inherit;\">promise</strong></li></ul></div>"
    }
  ]
}